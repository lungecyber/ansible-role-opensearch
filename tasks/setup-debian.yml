- name: Ensure dependencies are present.
  ansible.builtin.apt:
    name:
      - ca-certificates
      - gnupg2
    state: present

- name: Download opensearch gpg key
  ansible.builtin.get_url:
    url: https://artifacts.opensearch.org/publickeys/opensearch.pgp
    dest: /etc/apt/trusted.gpg.d/opensearch.asc

- name: Run gpg dry run and extract fingerprint
  ansible.builtin.shell: gpg --dry-run --quiet --no-keyring --import --import-options import-show /etc/apt/trusted.gpg.d/opensearch.asc
  register: dry_run_result

- name: Verify the fingerprint and fail playbook if no match
  ansible.builtin.fail:
    msg: Result fingerprint does not match the official fingerprint
  when: "gpg_fingerprint not in dry_run_result.stdout"

- name: Add opensearch repo to sources
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/trusted.gpg.d/opensearch.asc] https://artifacts.opensearch.org/releases/bundle/opensearch/2.x/apt stable main"
    state: present
    update_cache: true

- name: Install opensearch with initial admin password
  ansible.builtin.apt:
    name:
      - "opensearch={{ opensearch_version }}*"
    state: present
  environment:
    OPENSEARCH_INITIAL_ADMIN_PASSWORD: "{{ opensearch_initial_admin_password }}"
  when: opensearch_version is version('2.12', '>=')

- name: Install opensearch without initial admin password
  ansible.builtin.apt:
    name:
      - "opensearch={{ opensearch_version }}*"
    state: present
  when: opensearch_version is version('2.11', '<=')

- name: Ensure opensearch service is started and enabled
  ansible.builtin.service:
    name: opensearch
    state: started
    enabled: true

- name: Verify opensearch is working properly
  ansible.builtin.uri:
    url: "https://localhost:9200/_cat/plugins?v"
    method: GET
    user: "admin"
    password: "{{ opensearch_initial_admin_password }}"
    force_basic_auth: yes
    validate_certs: no
    status_code: 200
